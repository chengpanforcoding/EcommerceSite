@{
    ViewData["Title"] = "後台訂單管理列表";
}

<link rel="stylesheet" href="/css/BackOrderList.css" type="text/css">

<!-- 右側本體內容-->
<!--麵包屑//灰底-->
@*<nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">後台面板</a></li>
            <li class="breadcrumb-item active" aria-current="page">訂單管理</li>
        </ol>
    </nav>*@

<div class="breadcrumb d-flex align-items-center">
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a onclick="location.href='@Url.Action("Home", "Backstage")'">後台面板</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">訂單管理</li>
        </ol>
    </nav>
</div>

<div class="container g-3">
    <!--按鈕色rgb(100, 179, 244)-->
    <div class="bd_board" id="firmOrder">
        <div class="page-title">
            <h2><strong>訂單管理</strong></h2>
        </div>
        <div class="rel mb-3">
            顯示<select class="rel_n btn btn-outline-secondary dropdown-toggle" v-model="orderStatus" v-on:change="changeOrderStatus" type="button"
                      id="dropdownOrderButton" data-bs-toggle="dropdown" aria-expanded="false">
                <option selected class="dropdown-item" value="">所有狀態</option>
                <option value="Paid">已付款</option>
                <option value="NotPaid">未付款</option>
                <option value="Canceled">已取消</option>
                <option value="Done">已結案</option>
            </select>
            的訂單
        </div>
        <!-- 下拉選單 -->
        <div class="downlist">
            <div class="dropdown">
                <div class="dropdown-title">
                    顯示
                    <select class="btn btn-outline-secondary dropdown-toggle" v-model="countOfPage" type="button"
                            id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        <option selected class="dropdown-item" id="pageNumber" value="10">10</option>
                        <option class="dropdown-item" id="pageNumber" value="25">25</option>
                        <option class="dropdown-item" id="pageNumber" value="50">50</option>
                        <option class="dropdown-item" id="pageNumber" value="100">100</option>
                        <option class="dropdown-item" id="pageNumber" value="200">200</option>
                    </select>
                    筆
                </div>
            </div>
        </div>
        <!--textbox搜尋框-->
        @*<div class="buildtime">
            <label>訂單成立時間</label>
            <input type="date" value="2022-05-06T19:30">
        </div>*@
        <div class="input-group col-sm-2">
            <button class="input-group-text" id="basic-addon1" v-on:click="changeOrderStatus">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                </svg>
            </button>
            <input type="text" class="form-control" placeholder="請輸入關鍵字" aria-describedby="basic-addon1" v-model="orderKeyword" v-on:change="changeOrderStatus">
        </div>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col"><input type="checkbox" id="allcheck" onclick="demo()" />全選</th>
                    <th scope="col">訂單編號</th>
                    <th scope="col">日期</th>
                    <th scope="col">顧客姓名</th>
                    <th scope="col">付款狀態</th>
                    <th scope="col">總金額</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item,index) in orderList.slice(pageStart, pageStart + countOfPage)">
                    <th scope="row"><input type="checkbox" name="choice" class="checknum" onclick="setAll()" /></th>
                    <td>
                            <a v-bind:href=" '/Backstage/order/'+ item.id ">
                                #{{item.id}}
                            </a>
                    </td>
                    <td>{{item.date}}</td>
                    <td>{{item.name}}</td>
                    <td>{{item.orderStatus}}</td>
                    <td>{{totalPrice(index)}}</td>
                </tr>
                @*<tr>
                        <th scope="row"><input type="checkbox" name="choice" class="checknum" onclick="setAll()" /></th>
                        <td>#23456</td>
                        <td>2021.04.18</td>
                        <td>KK</td>
                        <td>未付款</td>
                        <td>$2030</td>
                    </tr>
                    <tr>
                        <th scope="row"><input type="checkbox" name="choice" class="checknum" onclick="setAll()" /></th>
                        <td>#65432</td>
                        <td>2021.04.18</td>
                        <td>Otto</td>
                        <td>已取消</td>
                        <td>$9999</td>
                    </tr>*@
            </tbody>
        </table>
        <div class="list-count">
            找到<span id="list-count-d">{{totalOrder}}</span>筆訂單
        </div>
        @*<nav class="page-navigator" aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item"><button class="page-link">1</button></li>
                    <li class="page-item"><button class="page-link">2</button></li>
                    <li class="page-item"><button class="page-link">3</button></li>
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>*@
        <nav class="page-navigator" aria-label="Page navigation example">
            @*<div class="pagination">*@
            <ul class="pagination">
                <!--<li class="page-item" v-bind:class="{'disabled': (currPage === 1)}"--> @*currPage=1停止下一頁*@
                <!--@@click.prevent="setPage(currPage-1)"><a class="page-link" href="#">&#60 Prev</a></li>-->
                @*現在頁面+1*@
                <li class="page-item" v-for="n in totalPage" v-bind:class="{'active': (currPage === (n))}"
                    @@click.prevent="setPage(n)">
                    <a class="page-link" href="#">{{n}}</a>
                </li>
                <li class="page-item" v-bind:class="{'disabled': (currPage === totalPage)}"
                    @@click.prevent="setPage(currPage+1)">
                    <a class="page-link" v-if="orderTotal>0" href="#">></a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@*<script>
    document.getElementById("pageNumber").addEventListener("change", function () {
        var selectPageNumber = document.getElementById("pageNumber").value;
        appFirmOrder.currPage = selectPageNumber;
    });
</script>*@
<script type="text/javascript">
    //checkbox全選全不選
    //點選全選，子複選框被選中
    function demo() {
        var allcheck = document.getElementById("allcheck");
        var choice = document.getElementsByName("choice");
        for (var i = 0; i < choice.length; i++) {
            choice[i].checked = allcheck.checked;
        }
    }

    //點選子複選框,全選框 選中、取消
    function setAll() {
        if (!$(".checknum").checked) {
            $("#allcheck").prop("checked", false); // 子複選框某個不選擇，全選也被取消
        }
        var choicelength = $("input[type='checkbox'][class='checknum']").length;
        var choiceselect = $("input[type='checkbox'][class='checknum']:checked").length;

        if (choicelength == choiceselect) {
            $("#allcheck").prop("checked", true);   // 子複選框全部部被選擇，全選也被選擇；1.對於HTML元素我們自己自定義的DOM屬性，在處理時，使用attr方法；2.對於HTML元素本身就帶有的固有屬性，在處理時，使用prop方法。
        }

    }
</script>


<script>
    var appFirmOrder = new Vue({
        el: '#firmOrder',
        data: {
            orderList: [],
            totalOrderPrice: "",
            paidStatus: {
                "NotPaid": "未付款",
                "Paid": "已付款",
                "Canceled": "已取消",
                "Done": "已結案"
            },
            orderTotal: "",
            pageLeftBtn: true,
            countOfPage: 10,// 幾個一頁
            currPage: 1,//初始頁
            orderStatus: "",
            orderKeyword:""
        },
        computed: {
            totalOrder: function () {
                return this.orderList.length;
            },
            pageStart: function () {
                return (this.currPage - 1) * this.countOfPage;
            },
            totalPage: function () {
                return Math.ceil(this.orderList.length / this.countOfPage);
            }
        },
        mounted: function () {
            this.getFirmOrders();
        },
        methods: {
            getFirmOrders: function () {
                let self = this;
                axios.get("/api/orders/manage")
                    .then(function (res) {
                        for (let i of res.data) {
                            i.orderStatus = self.paidStatus[i.orderStatus];
                        }
                        self.orderList = res.data;
                        self.orderTotal = res.data.length;
                        //    self.totalOrder = res.data.length;
                    })
            },
            totalPrice: function (a) {
                //先把每筆訂單的訂單明細取出來
                var x = this.orderList[a].orderdetails;
                //計算每筆訂單內所有訂單明細的總金額
                var item = x.map(x => x.unitPrice * x.discountPersent * x.quantity).reduce((now, next) => now + next, 0);
                return item;
            },
            setPage: function (idx) {//設定頁面
                if (idx <= 0 || idx > this.totalPage) {
                    return;
                }
                this.currPage = idx;
            },
            changeOrderStatus: function () {
                let self = this;
                axios.get("/api/orders/manage?Status=" + self.orderStatus + "&Keyword=" + self.orderKeyword).then(
                    function (res) {
                        if (res.status == 200) {
                            for (let i of res.data) {
                                i.orderStatus = self.paidStatus[i.orderStatus];
                            }
                            self.orderList = res.data;

                        }
                    }
                ).catch(function (err) {
                    if (err.status == 404) {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: err.data,
                            showConfirmButton: false,
                            timer: 1500,
                            willClose: (toast) => {
                                window.location.reload();
                            }
                        });
                        
                    }
                })
            }
        },
        filters: {
            ellipsis(value) {
                if (!value) return '';
                if (value.length > 50) {
                    return value.slice(0, 50) + '...'//第幾個字加...
                }
                return value
            }
        }
    })
</script>